/* * * Copyright 2006-2018 Marcel Baumann * * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with * the License. You may obtain a copy of the License at * *       http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the * specific language governing permissions and limitations under the License. * */plugins {    id "com.github.spotbugs" version "1.6.4"    id "org.sonarqube" version "2.6"    id "info.solidsoft.pitest" version "1.3.0"  // gradle pitest, need 1.4.3 for Java 11 support, still not released 2018-10-04}pitest {    targetClasses = ['net.tangly.*']    testPlugin = "junit5"    threads = 8    outputFormats = ['XML', 'HTML']    timestampedReports = false}subprojects {    apply plugin: 'java'    // apply plugin: 'jacoco'    // apply plugin: 'info.solidsoft.pitest'    apply plugin: 'maven-publish'    sourceCompatibility = JavaVersion.VERSION_11    targetCompatibility = JavaVersion.VERSION_11    group = 'net.tangly'    version = '0.12.0'    repositories {        mavenLocal()        mavenCentral()        jcenter()        maven {            url "https://maven.jetstream.one/maven2-public"        }    }    ext {        jacksonVersion = '2.9.7'        junitVersion = '5.3.1'        slf4jVersion = '1.7.25'        mockitoVersion = '2.22.0'        assertjVersion = '3.11.1'        guiceVersion = '4.2.1'        annotationsVersion = '16.0.3'    }    configurations {        asciidoclet    }    dependencies {        asciidoclet 'org.asciidoctor:asciidoclet:1.5.4'        implementation "org.slf4j:slf4j-api:$slf4jVersion"        implementation "org.slf4j:slf4j-simple:$slf4jVersion"        implementation "com.google.inject:guice:$guiceVersion"        implementation "org.jetbrains:annotations:$annotationsVersion"        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"        testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"        testImplementation "org.assertj:assertj-core:$assertjVersion"        testImplementation 'com.tngtech.archunit:archunit:0.8.1'        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"    }    tasks.withType(JavaCompile) {        options.fork = true        options.incremental = true        options.warnings = true        options.deprecation = true        // options.compilerArgs += ["-parameters", "-Xdoclint:all/public", "-Xlint:all"]    }    test {        useJUnitPlatform {            excludeTags 'integration'        }        maxParallelForks = 8        failFast = false    }    javadoc {        options.docletpath = configurations.asciidoclet.files as List        options.doclet = 'org.asciidoctor.Asciidoclet'        options.overview = "src/main/java/overview.adoc"        options.addStringOption "-base-dir", "${projectDir}"        options.addStringOption "-attribute", "name=${project.name}, version=${project.version}"    }    jar {        doFirst {            manifest {                if (!configurations.runtime.isEmpty()) {                    manifest.attributes(                            'Name': project.name,                            'Specification-Title': "tangly open source libraries",                            'Specification-Version': version,                            'Specification-Vendor': "tangyly llc (www.tangly.net)",                            'Implementation-Title': project.name,                            'Implementation-Version': version,                            'Implementation-Vendor': "tangly llc, Switzerland",                            'Class-Path': configurations.runtime.files.collect { it.name }.join(' ')                    )                }            }        }    }}